<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC
"-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.javajo.sunshineRoad.mappers.admin.member.AdminMemberMapper">
	
	<resultMap type="APostType" id="APostTypeMap">
		<result column="POST_TYPE_ID" property="postTypeId"  />
		<result column="POST_TYPE_NAME" property="postTypeName"/>
	</resultMap>
	<resultMap id="AMCommunityMap" type="AMCommunity" >
		<id property="communityPostId" column="U_COMMUNITY_POST_ID" />
		<result property="uId" column="U_ID" />
		<result property="postTypeId" column="POST_TYPE_ID" />
		<result property="communityImgId" column="U_COMMUNITY_IMG_ID" />
		<result property="communityContent" column="U_COMMUNITY_CONTENT"  jdbcType="CLOB" javaType="java.lang.String" />
		<result property="communityDateCreated" column="U_COMMUNITY_DATE_CREATED" />
		<result property="communityLikeCnt" column="COMMUNITY_LIKE_CNT" />
		<result property="communityCumCnt" column="COMMUNITY_CUM_CNT" />
		<result property="communityViewCnt" column="COMMUNITY_VIEW_CNT" />
	</resultMap>

	<resultMap type="AMember" id="AMemberMap">
		<result column="U_NICK" property="u_nick"/>
	</resultMap>
	
	<select id="getAllMembers" resultType="AMember">
		SELECT U_ID,
			   MEM_TYPE_ID,
			   U_NAME,
			   U_EMAIL,
			   U_NICK,
			   U_TEL,
			   DATE_FORMAT(U_REG_DATE, '%Y-%m-%d') AS U_REG_DATE,
			   U_MARKETING,
			   U_GENDER,
			   U_BIRTH,
			   U_GOOGLE_LOGIN,
			   U_NAVER_LOGIN,
			   U_KAKAO_LOGIN
		FROM MEMBER
		ORDER BY U_ID
			LIMIT #{perPagePostNo}
		OFFSET #{startPostNo}
	</select>

	<select id="selectMemberID"  resultType="AMember">
		SELECT U_ID,
			   MEM_TYPE_ID,
			   U_NAME,
			   U_EMAIL,
			   U_NICK,
			   U_TEL,
			   DATE_FORMAT(U_REG_DATE, '%Y-%m-%d') AS U_REG_DATE,
			   U_MARKETING,
			   U_GENDER,
			   U_BIRTH,
			   U_GOOGLE_LOGIN,
			   U_NAVER_LOGIN,
			   U_KAKAO_LOGIN
		FROM MEMBER
		WHERE U_ID = #{uId}
	</select>
	
	<select id="selectMemberDATE" resultType="AMember">
		SELECT U_ID,
			   MEM_TYPE_ID,
			   U_NAME,
			   U_EMAIL,
			   U_NICK,
			   U_TEL,
			   DATE_FORMAT(U_REG_DATE, '%Y-%m-%d') AS U_REG_DATE,
			   U_MARKETING,
			   U_GENDER,
			   U_BIRTH,
			   U_GOOGLE_LOGIN,
			   U_NAVER_LOGIN,
			   U_KAKAO_LOGIN
		FROM MEMBER
		WHERE (U_REG_DATE BETWEEN
			STR_TO_DATE(#{searchDTO.startDate}, '%Y-%m-%d %H:%i:%s.%f')
			AND STR_TO_DATE(#{searchDTO.endDate}, '%Y-%m-%d %H:%i:%s.%f'))
		   OR (U_ID = #{searchDTO.id})
		   OR (U_REG_DATE BETWEEN
				   STR_TO_DATE(#{searchDTO.startDate}, '%Y-%m-%d %H:%i:%s.%f')
				   AND STR_TO_DATE(#{searchDTO.endDate}, '%Y-%m-%d %H:%i:%s.%f')
			AND U_ID = #{searchDTO.id})
		ORDER BY U_ID
			LIMIT #{perPagePostNo}
		OFFSET #{startPostNo}
	</select>

	<select id="selectMember" resultType="AMember">
		SELECT U_ID,
			   MEM_TYPE_ID,
			   U_NAME,
			   U_EMAIL,
			   U_NICK,
			   U_PW,
			   U_TEL,
			   DATE_FORMAT(U_REG_DATE, '%Y-%m-%d') AS U_REG_DATE,
			   U_MARKETING,
			   U_GENDER,
			   DATE_FORMAT(U_BIRTH, '%Y-%m-%d')    AS U_BIRTH,
			   U_GOOGLE_LOGIN,
			   U_NAVER_LOGIN,
			   U_KAKAO_LOGIN
		FROM MEMBER
		WHERE (U_REG_DATE BETWEEN
			STR_TO_DATE(#{searchDTO.startDate}, '%Y-%m-%d %H:%i:%s.%f')
			AND STR_TO_DATE(#{searchDTO.endDate}, '%Y-%m-%d %H:%i:%s.%f'))
		  AND (U_ID = #{searchDTO.id})
		UNION
		SELECT U_ID,
			   MEM_TYPE_ID,
			   U_NAME,
			   U_EMAIL,
			   U_NICK,
			   U_PW,
			   U_TEL,
			   DATE_FORMAT(U_REG_DATE, '%Y-%m-%d') AS U_REG_DATE,
			   U_MARKETING,
			   U_GENDER,
			   DATE_FORMAT(U_BIRTH, '%Y-%m-%d')    AS U_BIRTH,
			   U_GOOGLE_LOGIN,
			   U_NAVER_LOGIN,
			   U_KAKAO_LOGIN
		FROM MEMBER
		WHERE (U_REG_DATE BETWEEN
			STR_TO_DATE(#{searchDTO.startDate}, '%Y-%m-%d %H:%i:%s.%f')
			AND STR_TO_DATE(#{searchDTO.endDate}, '%Y-%m-%d %H:%i:%s.%f'))
		  AND U_NAME LIKE CONCAT('%', #{searchDTO.keyword}, '%')
		ORDER BY U_ID
			LIMIT #{perPagePostNo}
		OFFSET #{startPostNo}
	</select>

    <insert id="registrationMember" parameterType="AMember">
		INSERT INTO MEMBER
		VALUES (NULL,
				1,
				#{uName},
				#{uEmail},
				#{uNick},
				#{uPw},
				#{uTel},
				CURRENT_TIMESTAMP,
				#{uMarketing},
				#{uGender},
				STR_TO_DATE(#{uBirth}, '%Y-%m-%d'),
				NULL,
				NULL,
				NULL)
    </insert>
           	
	<update id="updateMember" parameterType="AMember">
		UPDATE MEMBER
		SET U_NAME=#{uName},
			U_EMAIL=#{uEmail},
			U_NICK=#{uNick},
			U_PW=#{uPw},
			U_TEL=#{uTel}
		WHERE U_ID = #{uId}
	</update>

	<delete id="delMember" parameterType="int">
		DELETE
		FROM MEMBER
		WHERE U_ID = #{uId}
	</delete>

<!--  
-->

	<select id="wrotePost" parameterType="int" resultMap="AMCommunityMap">
		SELECT M.U_COMMUNITY_POST_ID,
			   M.U_ID,
			   I.U_NICK,
			   I.U_EMAIL,
			   M.POST_TYPE_ID,
			   P.POST_TYPE_NAME,
			   M.U_COMMUNITY_IMG_ID,
			   M.U_COMMUNITY_CONTENT,
			   DATE_FORMAT(M.U_COMMUNITY_DATE_CREATED, '%Y-%m-%d %H:%i:%s.%f') AS U_COMMUNITY_DATE_CREATED,
			   M.COMMUNITY_LIKE_CNT,
			   M.COMMUNITY_VIEW_CNT,
			   M.COMMUNITY_CUM_CNT
		FROM MEMBER_COMMUNITY M
				 LEFT JOIN POST_TYPE P ON M.POST_TYPE_ID = P.POST_TYPE_ID
				 LEFT JOIN MEMBER I ON M.U_ID = I.U_ID
		WHERE M.U_ID = #{uId}
		ORDER BY M.U_COMMUNITY_DATE_CREATED DESC
			LIMIT #{perPagePostNo}
		OFFSET #{startPostNo}
	</select>

</mapper>
<!-- (s_id, mem_type_id, u_name, u_email, u_nick, u_pw, u_tel, u_reg_date, u_marketing, u_gender, u_birth, u_google_login, u_naver_login, u_kakao_login)
 -->