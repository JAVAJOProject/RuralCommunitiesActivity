<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper
	namespace="com.javajo.sunshineRoad.mappers.mypageSeller.MypageSellerMeasurementMapper">
	<resultMap id="measurementResultMap"
		type="MypageSellerMeasurementDTO">
		<!-- <result column="month" property="month" /> <result column="total_reservations" 
			property="totalReservations" /> <result column="canceled_reservations" property="canceledReservations" 
			/> <result column="reservation_Count" property="reservationCount" /> -->
		<result column="reservation_date" property="reservationDate" />
		<result column="total_counts" property="totalCount" />
		<result column="canceled_count" property="canceledCount" />

	</resultMap>
	<!-- 월별 예약자수 대비 취소자수 -->
	<!-- <select id="getMeasurementData" parameterType="int" resultMap="measurementResultMap"> 
		select month, total_reservations, canceled_reservations from ( SELECT TO_CHAR(reservation_date, 
		'YYYY-MM') AS month, COUNT(*) AS total_reservations, SUM(CASE WHEN reservation_status 
		= '예약취소' THEN 0 ELSE 1 END) AS canceled_reservations, SUM(CASE WHEN reservation_status 
		= '예약대기' THEN 1 ELSE 0 END) AS waiting_reservations FROM reservation WHERE 
		reservation_date BETWEEN TO_DATE('2023-04-01', 'YYYY-MM-DD') AND TO_DATE('2023-09-30', 
		'YYYY-MM-DD') GROUP BY TO_CHAR(reservation_date, 'YYYY-MM') ORDER BY month 
		) where <![CDATA[rownum<=6]]> -->
	<select id="getMeasurementData" resultMap="measurementResultMap">
		SELECT TO_CHAR(reservation_date, 'YYYY-MM') AS month,
		COUNT(*) AS total_reservations,
		SUM(CASE WHEN reservation_status =
		'예약취소' THEN 1 ELSE 0 END) AS
		canceled_reservations
		FROM reservation
		WHERE reservation_date BETWEEN TO_DATE('2023-04-01'
			, 'YYYY-MM-DD')
		  AND
			TO_DATE('2023-09-30'
			, 'YYYY-MM-DD')
		GROUP BY TO_CHAR(reservation_date,
			'YYYY-MM')
		ORDER BY month
	</select>
<!--	SELECT TO_CHAR(months.month, 'YYYY-MM') AS month,-->
<!--	NVL(COUNT(r.reservation_date), 0) AS total_reservations,-->
<!--	NVL(SUM(CASE WHEN r.reservation_status = '예약취소' THEN 1 ELSE 0 END), 0) AS canceled_reservations-->
<!--	FROM (SELECT ADD_MONTHS(TRUNC(SYSDATE, 'MONTH'), LEVEL - 1) AS month-->
<!--	FROM DUAL-->
<!--	CONNECT BY LEVEL <= 6) months-->
<!--	LEFT JOIN reservation r-->
<!--	ON TO_CHAR(r.reservation_date, 'YYYY-MM') = TO_CHAR(months.month, 'YYYY-MM')-->
<!--	WHERE months.month BETWEEN ADD_MONTHS(TRUNC(SYSDATE, 'MONTH'), -6) AND ADD_MONTHS(TRUNC(SYSDATE, 'MONTH'), -1)-->
<!--	GROUP BY TO_CHAR(months.month, 'YYYY-MM')-->
<!--	ORDER BY month-->

	<!-- 별점개수 별 리뷰 -->
	<resultMap id="reviewRatingResultMap"
		type="MypageSellerMeasurementDTO">
		<result column="rating" property="rating" />
		<result column="count" property="count" />
	</resultMap>
	<!-- 별점 갯수 -->
	<select id="getReviewRatings" resultMap="reviewRatingResultMap">
		SELECT r_star_rating AS
				   rating,
			   COUNT(*) AS count
		FROM
			activity_review
		WHERE
			r_star_rating IN (5
			, 4
			, 3
			, 2
			, 1)
		GROUP BY
			r_star_rating
		ORDER BY
			rating DESC
	</select>

	<!-- 성별 각 예약 cnt -->
	<resultMap id="genderResultMap"
		type="MypageSellerMeasurementDTO">
		<result column="gender" property="gender" />
		<result column="gender_count" property="genderCount" />
	</resultMap>
	<select id="getGenderReservationData" resultMap="genderResultMap">
		SELECT m.u_gender AS gender,
			   COUNT(*)   AS reservation_count
		FROM reservation r
				 JOIN
			 member m ON r.u_id = m.u_id
		GROUP BY m.u_gender
	</select>

	<!-- 과거의 시간이면서 예약완료 인 사람 -->
	<resultMap id="ReviewRatioMap"
		type="MypageSellerMeasurementDTO">
		<result column="review_written_count"
			property="reviewWrittenCount" />
		<result column="total_visitors_count"
			property="totalVisitorsCount" />
	</resultMap>
	<select id="getReviewRatio" resultMap="ReviewRatioMap">
		SELECT COUNT(CASE WHEN review_status = 1 THEN 1 ELSE NULL END) AS review_written_count,
			   COUNT(*)                                                AS total_visitors_count,
			   CASE
				   WHEN COUNT(*) = 0 THEN 0
				   ELSE COUNT(CASE WHEN review_status = 1 THEN 1 ELSE NULL END) / COUNT(*)
				   END                                                 AS review_ratio
		FROM reservation
		WHERE reservation_status = '예약완료'
		  AND reservation_date  <![CDATA[<]]> SYSDATE
	</select>

	<!-- 나이대별 -->
	<resultMap id="MeasurementByAgeMap"
		type="MypageSellerMeasurementDTO">
		<result column="age_range" property="ageRange" />
		<result column="member_count" property="memberCount" />
	</resultMap>
	<select id="getReservationsByAge" resultMap="MeasurementByAgeMap">
		SELECT '90-94'  AS age_range,
			   COUNT(*) AS member_count
		FROM member
		WHERE member.u_birth BETWEEN TO_DATE('1990-01-01', 'YYYY-MM-DD')
				  AND TO_DATE('1994-12-31',
							  'YYYY-MM-DD')
		UNION ALL
		SELECT '95-99'  AS
						   age_range,
			   COUNT(*) AS member_count
		FROM member
		WHERE member.u_birth
				  BETWEEN TO_DATE('1995-01-01', 'YYYY-MM-DD') AND TO_DATE('1999-12-31',
																		  'YYYY-MM-DD')
	</select>
<!--	SELECT '1-10' AS age_range, COUNT(*) AS member_count-->
<!--	FROM member-->
<!--	WHERE member.u_birth BETWEEN TO_DATE(TO_CHAR(ADD_MONTHS(SYSDATE, -9*12), 'YYYY') || '-01-01', 'YYYY-MM-DD') AND TO_DATE(TO_CHAR(SYSDATE, 'YYYY') || '-12-31', 'YYYY-MM-DD')-->
<!--	UNION ALL-->
<!--	SELECT '11-20' AS age_range, COUNT(*) AS member_count-->
<!--	FROM member-->
<!--	WHERE member.u_birth BETWEEN TO_DATE(TO_CHAR(ADD_MONTHS(SYSDATE, -19*12), 'YYYY') || '-01-01', 'YYYY-MM-DD') AND TO_DATE(TO_CHAR(ADD_MONTHS(SYSDATE, -10*12), 'YYYY') || '-12-31', 'YYYY-MM-DD')-->
<!--	UNION ALL-->
<!--	SELECT '21-30' AS age_range, COUNT(*) AS member_count-->
<!--	FROM member-->
<!--	WHERE member.u_birth BETWEEN TO_DATE(TO_CHAR(ADD_MONTHS(SYSDATE, -29*12), 'YYYY') || '-01-01', 'YYYY-MM-DD') AND TO_DATE(TO_CHAR(ADD_MONTHS(SYSDATE, -20*12), 'YYYY') || '-12-31', 'YYYY-MM-DD')-->
<!--	UNION ALL-->
<!--	SELECT '31-40' AS age_range, COUNT(*) AS member_count-->
<!--	FROM member-->
<!--	WHERE member.u_birth BETWEEN TO_DATE(TO_CHAR(ADD_MONTHS(SYSDATE, -39*12), 'YYYY') || '-01-01', 'YYYY-MM-DD') AND TO_DATE(TO_CHAR(ADD_MONTHS(SYSDATE, -30*12), 'YYYY') || '-12-31', 'YYYY-MM-DD')-->
<!--	UNION ALL-->
<!--	SELECT '41-50' AS age_range, COUNT(*) AS member_count-->
<!--	FROM member-->
<!--	WHERE member.u_birth BETWEEN TO_DATE(TO_CHAR(ADD_MONTHS(SYSDATE, -49*12), 'YYYY') || '-01-01', 'YYYY-MM-DD') AND TO_DATE(TO_CHAR(ADD_MONTHS(SYSDATE, -40*12), 'YYYY') || '-12-31', 'YYYY-MM-DD')-->
<!--	UNION ALL-->
<!--	SELECT '51+' AS age_range, COUNT(*) AS member_count-->
<!--	FROM member-->
<!--	WHERE member.u_birth < TO_DATE(TO_CHAR(ADD_MONTHS(SYSDATE, -50*12), 'YYYY') || '-12-31', 'YYYY-MM-DD')-->

</mapper>